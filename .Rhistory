out.two.star <- matrix( choose(out.degree,2),m,1) #  out-stars refecting dispersion in activity
mix.two.star <- in.degree*out.degree - rec.ties # correlation between indegree and outdegree
in.three.star <- matrix( choose(in.degree,3),m,1) # furhter measure of in-degree heterogeneity
out.three.star <- matrix( choose(out.degree,3),m,1) # furhter measure of out-degree heterogeneity
triangles <- rowSums( adj.lefttroll* (adj.lefttroll %*% t(adj.lefttroll) )  ) # embedded in transitive triads
## Forming a new covs
covs.lefttroll <- cbind(
activity,
maxfollowing,
minfollowing,
maxfollowers,
minfollowers,
in.degree,
out.degree,
rec.ties,
in.two.star,
out.two.star,
mix.two.star,
in.three.star,
out.three.star,
triangles)
colnames(covs.lefttroll) <- c(
"activity",
"maxfollowing",
"minfollowing",
"maxfollowers",
"minfollowers",
"indegree",
"outdegree",
"reciprocation" ,
"instar",
"outstar",
"twopath",
"in3star",
"out3star",
"transitive")
head(covs.lefttroll)
# creating measure of dv
fg.lefttroll <- maxfollowers - minfollowers
summary(fg.lefttroll) # the mean is 2719,but the median is 19.
str(fg.lefttroll)
fg.lefttroll[fg.lefttroll<392] <- 0
fg.lefttroll[fg.lefttroll>=392] <- 1
summary(fg.lefttroll)
summary(fg.lefttroll) # the mean is 2719,but the median is 19.
# creating measure of dv
fg.lefttroll <- maxfollowers - minfollowers
summary(fg.lefttroll) # the mean is 2719,but the median is 19.
summary(fg.lefttroll) # the mean is 2330,but the median is 392.
str(fg.lefttroll)
fg.lefttroll[fg.lefttroll<392] <- 0
fg.lefttroll[fg.lefttroll>=392] <- 1
str(fg.lefttroll)
res.lt <- BayesALAAM(y = fg.lefttroll, # median-based dependent variable
ADJ = adj.lefttroll,           # network
covariates = covs.lefttroll[,c(1,6,7,8,11,14)],   # covariates
directed = TRUE,     # directed / undirecred network
Iterations = 10,000,   # number of iterations
saveFreq = 500)   # print and save frequency
## results not good enough
## you can improve the mixing by using a better proposal covariance
Propsigma <- cov(res.lt$Thetas)
res.lt <- BayesALAAM(y = fg.lefttroll, # median-based dependent variable
ADJ = adj.lefttroll,           # network
covariates = covs.lefttroll[,c(1,6,7,8,11,14)],   # covariates
directed = TRUE,     # directed / undirecred network
Iterations = 10000,   # number of iterations
saveFreq = 500)   # print and save frequency
## results not good enough
## you can improve the mixing by using a better proposal covariance
Propsigma <- cov(res.lt$Thetas)
###############################################################################
# Load and Analyze Models
###############################################################################
# Read models
model <- readRDS("./.rtmodel.rds")
model
model <- readRDS("./.ltmodel.rds")
## you can improve the mixing by using a better proposal covariance
## which can be used as an argument PropSigma to BayesALAAM.
Propsigma <- cov(model$Thetas)
#####
# Run and Test ALAAM Models
#####
res.lt <- BayesALAAM(y = fg.lefttroll, # median-based dependent variable
ADJ = adj.lefttroll,           # network
covariates = covs.lefttroll[,c(1,6,7,8,11,14)],   # covariates
directed = TRUE,     # directed / undirecred network
Iterations = 6850,   # number of iterations
saveFreq = 500)   # print and save frequency
model
## you can improve the mixing by using a better proposal covariance
## which can be used as an argument PropSigma to BayesALAAM.
Propsigma <- cov(res.lt$Thetas)
#####
# Run and Test ALAAM Models
#####
res.lt <- BayesALAAM(y = fg.lefttroll, # median-based dependent variable
ADJ = adj.lefttroll,           # network
covariates = covs.lefttroll[,c(1,6,7,8,11,14)],   # covariates
directed = TRUE,     # directed / undirecred network
Iterations = 4000,   # number of iterations
saveFreq = 500)   # print and save frequency
###############################################################################
# Creating LeftTroll ALAAM Model
###############################################################################
# Extract lefttrolls from troll data
#####
trollssample.lefttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory" %in% c("LeftTroll"))
)
#####
# Create component
#####
delete.vertex.attribute(trollssample.lefttroll,"region")
delete.vertex.attribute(trollssample.lefttroll,"language")
lt <- asIgraph(trollssample.lefttroll)
comp <- components(lt)
comp
component.lefttroll <- lt %>%induced.subgraph(
.,
v=which(comp$membership == which.max(comp$csize))
)
#return to a network package
trollssample.lefttroll <- asNetwork(component.lefttroll)
#####
# Create adjacency matrix component (plot and count trolls)
#####
adj.lefttroll <- as.matrix.network.adjacency(trollssample.lefttroll)
m <- nrow(adj.lefttroll) # check how many rows are there
m # this number is important, it is different from n in upper data
gplot(adj.lefttroll)
#Script assumes that you have downloaded the data
# from https://github.com/fivethirtyeight/russian-troll-tweets
###############################################################################
# Install and Load Trolls Libraries
###############################################################################
# install.packages("ggplot2")
library(ggplot2)
# install.packages("stringr")
library(stringr)
# install.packages("sna")
library(sna)
# install.packages("mvtnorm")
library(mvtnorm)
# install.packages("network")
library(network)
# install.packages("sna")
library(sna)
# install.packages("mvtnorm")
library(mvtnorm)
# install.packages("xtable")
library(xtable)
# install.packages("CINNA")
library(CINNA)
# install.packages("intergraph")
library(intergraph)
# install.packages("igraph")
library(igraph)
source('MultivarALAAMalt.R')
###############################################################################
# Load Trolls Rdata
###############################################################################
load("trolls.Rdata")
###############################################################################
# Creating LeftTroll ALAAM Model
###############################################################################
# Extract lefttrolls from troll data
#####
trollssample.lefttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory" %in% c("LeftTroll"))
)
#####
# Create component
#####
delete.vertex.attribute(trollssample.lefttroll,"region")
delete.vertex.attribute(trollssample.lefttroll,"language")
lt <- asIgraph(trollssample.lefttroll)
comp <- components(lt)
comp
component.lefttroll <- lt %>%induced.subgraph(
.,
v=which(comp$membership == which.max(comp$csize))
)
#return to a network package
trollssample.lefttroll <- asNetwork(component.lefttroll)
#####
# Create adjacency matrix component (plot and count trolls)
#####
adj.lefttroll <- as.matrix.network.adjacency(trollssample.lefttroll)
m <- nrow(adj.lefttroll) # check how many rows are there
m # this number is important, it is different from n in upper data
gplot(adj.lefttroll)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM ()
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
names <- get.vertex.attribute(trollssample.lefttroll,"vertex.names")
activity <- get.vertex.attribute(trollssample.lefttroll,"activity")
language <- get.vertex.attribute(trollssample.lefttroll,"language")
maxfollowing <- get.vertex.attribute(trollssample.lefttroll,"maxfollowing")
minfollowing <- get.vertex.attribute(trollssample.lefttroll,"minfollowing")
#return to a network package
trollssample.lefttroll <- asNetwork(component.lefttroll)
#####
# Create adjacency matrix component (plot and count trolls)
#####
adj.lefttroll <- as.matrix.network.adjacency(trollssample.lefttroll)
m <- nrow(adj.lefttroll) # check how many rows are there
m # this number is important, it is different from n in upper data
gplot(adj.lefttroll)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM ()
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
summary(trollsample.lefttroll)
summary(trollssample.lefttroll)
names <- get.vertex.attribute(trollssample.lefttroll,"vertex.names")
summary(trollssample.lefttroll)
trollssample.lefttroll''
trollssample.lefttroll
# install.packages("network")
library(network)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM ()
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
###############################################################################
# Creating LeftTroll ALAAM Model
###############################################################################
# Extract lefttrolls from troll data
#####
trollssample.lefttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory" %in% c("LeftTroll"))
)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
#####
# Create component
#####
delete.vertex.attribute(trollssample.lefttroll,"region")
delete.vertex.attribute(trollssample.lefttroll,"language")
lt <- asIgraph(trollssample.lefttroll)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
source('MultivarALAAMalt.R')
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
#Script assumes that you have downloaded the data
# from https://github.com/fivethirtyeight/russian-troll-tweets
###############################################################################
# Install and Load Trolls Libraries
###############################################################################
# install.packages("ggplot2")
library(ggplot2)
# install.packages("stringr")
library(stringr)
# install.packages("network")
library(network)
# install.packages("sna")
library(sna)
# install.packages("mvtnorm")
library(mvtnorm)
# install.packages("xtable")
library(xtable)
# install.packages("CINNA")
library(CINNA)
# install.packages("intergraph")
library(intergraph)
# install.packages("igraph")
library(igraph)
source('MultivarALAAMalt.R')
###############################################################################
# Load Trolls Rdata
###############################################################################
load("trolls.Rdata")
###############################################################################
# Creating LeftTroll ALAAM Model
###############################################################################
# Extract lefttrolls from troll data
#####
trollssample.lefttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory" %in% c("LeftTroll"))
)
#####
# Create component
#####
delete.vertex.attribute(trollssample.lefttroll,"region")
delete.vertex.attribute(trollssample.lefttroll,"language")
lt <- asIgraph(trollssample.lefttroll)
comp <- components(lt)
comp
component.lefttroll <- lt %>%induced.subgraph(
.,
v=which(comp$membership == which.max(comp$csize))
)
#return to a network package
trollssample.lefttroll <- asNetwork(component.lefttroll)
#####
# Create adjacency matrix component (plot and count trolls)
#####
adj.lefttroll <- as.matrix.network.adjacency(trollssample.lefttroll)
m <- nrow(adj.lefttroll) # check how many rows are there
m # this number is important, it is different from n in upper data
gplot(adj.lefttroll)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
trollssample.lefttroll
get.vertex.attribute(trollssample.lefttroll,"accountcategory")
is.graph(trollssample.lefttroll)
is.igraph(trollssample.lefttroll)
is.network(trollssample.lefttroll)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM
accountcategory <- get.vertex.attribute.network(trollssample.lefttroll,"accountcategory")
#Script assumes that you have downloaded the data
# from https://github.com/fivethirtyeight/russian-troll-tweets
###############################################################################
# Install and Load Trolls Libraries
###############################################################################
# install.packages("ggplot2")
library(ggplot2)
# install.packages("network")
library(network)
# install.packages("igraph")
library(igraph)
source('MultivarALAAMalt.R')
###############################################################################
# Load Trolls Rdata
###############################################################################
load("trolls.Rdata")
###############################################################################
# ALAAM
###############################################################################
# Creating RightTroll ALAAM Model
###############################################################################
# Extract righttrolls from troll data
#####
trollssample.righttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory"%in%c("RightTroll"))
)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM ()
accountcategory <- get.vertex.attribute(trollssample.righttroll,"accountcategory")
accountcategory <- get.vertex.attribute.network(trollssample.righttroll,"accountcategory")
# install.packages("network")
library(network)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM ()
accountcategory <- get.vertex.attribute(trollssample.righttroll,"accountcategory")
###############################################################################
# Creating LeftTroll ALAAM Model
###############################################################################
# Extract lefttrolls from troll data
#####
trollssample.lefttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory" %in% c("LeftTroll"))
)
#####
# Create component
#####
delete.vertex.attribute(trollssample.lefttroll,"region")
delete.vertex.attribute(trollssample.lefttroll,"language")
lt <- asIgraph(trollssample.lefttroll)
accountcategory <- get.vertex.attribute.network(trollssample.righttroll,"accountcategory")
comp <- components(lt)
comp
component.lefttroll <- lt %>%induced.subgraph(
.,
v=which(comp$membership == which.max(comp$csize))
)
#return to a network package
trollssample.lefttroll <- asNetwork(component.lefttroll)
#####
# Create adjacency matrix component (plot and count trolls)
#####
adj.lefttroll <- as.matrix.network.adjacency(trollssample.lefttroll)
m <- nrow(adj.lefttroll) # check how many rows are there
m # this number is important, it is different from n in upper data
gplot(adj.lefttroll)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM
library(network)
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
source("get.vertex.attribute(trollssample.lefttroll, "accountcategory")")
source("get.vertex.attribute")
m
accountcategory <- get.vertex.attribute(trollssample.lefttroll,"accountcategory")
trollssample.lefttroll
class(trollssample.lefttroll)
list.vertex.attributes(trollssample.lefttroll)
#####
# Create component
#####
delete.vertex.attribute(trollssample.lefttroll,"region")
delete.vertex.attribute(trollssample.lefttroll)
delete.vertex.attribute(trollssample.lefttroll, "region")
get.vertex.attribute(trollssample.lefttroll, "region")
#Script assumes that you have downloaded the data
# from https://github.com/fivethirtyeight/russian-troll-tweets
###############################################################################
# Install and Load Trolls Libraries
###############################################################################
# install.packages("ggplot2")
library(ggplot2)
#Script assumes that you have downloaded the data
# from https://github.com/fivethirtyeight/russian-troll-tweets
###############################################################################
# Install and Load Trolls Libraries
###############################################################################
# install.packages("ggplot2")
library(ggplot2)
# install.packages("network")
library(network)
source('MultivarALAAMalt.R')
###############################################################################
# Load Trolls Rdata
###############################################################################
load("trolls.Rdata")
###############################################################################
# ALAAM
###############################################################################
# Creating RightTroll ALAAM Model
###############################################################################
# Extract righttrolls from troll data
#####
trollssample.righttroll <- get.inducedSubgraph(
trolls,
v=which(trolls %v% "accountcategory"%in%c("RightTroll"))
)
#####
# Prepare ALAAM covariates
#####
# Creating context-specific covariates for covs table that will be used for ALAAM ()
accountcategory <- get.vertex.attribute(trollssample.righttroll,"accountcategory")
###############################################################################
# Load and Analyze Models
###############################################################################
# Read models
model <- readRDS("./.rtmodel.rds")
model
# Plot the MCMC output in trace plots
plot(ts(model$Thetas))
# Obtain the model results
write.res.table(burnin=1, # should be set sufficiently high
datamat=model$Thetas, # the result from BayesALAAM
thin=1, # should be set so that SACF is sufficiently low,
# important for Confidence Intervals
tabname=NULL) # the name appended to the table that is saved
# Plot the MCMC output in trace plots
plot(ts(model$Thetas))
# Obtain the model results
write.res.table(burnin=1, # should be set sufficiently high
datamat=model$Thetas, # the result from BayesALAAM
thin=1, # should be set so that SACF is sufficiently low,
# important for Confidence Intervals
tabname=NULL) # the name appended to the table that is saved
# Draw posterior samples from model for GOF tests
sim.rt <- get.gof.distribution(NumIterations=500, # number of vectors to draw
res=model, # the ALAAM estimation object that contains model and results
burnin=100, # no. iterations discarded from GOF distribution
thinning = 1000) #, # no. iterations between sample points
# Create GOF table from simulated sample object
gof.table(obs.stats= sim.rt$stats, # observed statistics included not
# fitted statistics
sim.stats= sim.rt$Sav.gof, # simulated goodness-of-fit statistics
name.vec= sim.rt$gof.stats.names, # names of statistics calculate,
# not all will be used if undirected
tabname='ALAAMGoFRightTroll', # name of file saved
pvalues=TRUE, # posterior predictive p-values
# save.tab ='csv', # save a csv file or a LaTex file
directed=TRUE)
# Create GOF table from simulated sample object
gof.table(obs.stats= sim.rt$stats, # observed statistics included not
# fitted statistics
sim.stats= sim.rt$Sav.gof, # simulated goodness-of-fit statistics
name.vec= sim.rt$gof.stats.names, # names of statistics calculate,
# not all will be used if undirected
tabname='ALAAMGoFRightTroll', # name of file saved
pvalues=TRUE, # posterior predictive p-values
# save.tab ='csv', # save a csv file or a LaTex file
directed=TRUE)
trolls
